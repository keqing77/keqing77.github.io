(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{586:function(t,s,a){t.exports=a.p+"assets/img/prototype.13cf6ccb.jpg"},587:function(t,s,a){t.exports=a.p+"assets/img/function.8fcc2675.png"},588:function(t,s,a){t.exports=a.p+"assets/img/Function_Object.f1bbeec7.png"},721:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("构造函数(constructor) 只要在new关键词后面的函数就是构造函数")]),t._v(" "),n("p",[t._v("构造函数就是提供了一个生成对象的模板并描述对象的基本结构的函数。"),n("br"),t._v("\n一个构造函数，可以生成多个对象，每个对象都有相同的结构。"),n("br"),t._v("\n构造函数就是对象的模板，对象就是构造函数的实例。")])]),t._v(" "),n("blockquote",[n("p",[t._v("先来看一段代码")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" boy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("boy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("boy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("在这段代码中，你只需要看第六行，首先看到关键字"),n("code",[t._v("new")]),t._v(",其次是跟在new后面的构造函数"),n("code",[t._v("Person")]),t._v(",通过new创建了新的对象"),n("code",[t._v("boy")]),t._v("，\nboy拥有了构造函数的属性和方法("),n("code",[t._v("这段代码没有方法")]),t._v(")")]),t._v(" "),n("h3",{attrs:{id:"构造函数的特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造函数的特点"}},[t._v("#")]),t._v(" 构造函数的特点")]),t._v(" "),n("ul",[n("li",[t._v("构造函数的函数名首字母大写(只是一种约定!)")]),t._v(" "),n("li",[t._v("内部使用this对象，来指向将要生成的对象实例")]),t._v(" "),n("li",[t._v("使用new操作符来调用构造函数，并返回对象实例")])]),t._v(" "),n("h3",{attrs:{id:"new所作的四件事情"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new所作的四件事情"}},[t._v("#")]),t._v(" new所作的四件事情")]),t._v(" "),n("ul",[n("li",[t._v("创建一个新对象")]),t._v(" "),n("li",[t._v("为新对象添加属性__proto__，将该属性链接至构造函数的原型对象")]),t._v(" "),n("li",[t._v("将this指向新对象")]),t._v(" "),n("li",[t._v("返回这个对象")])]),t._v(" "),n("h1",{attrs:{id:"原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),n("p",[t._v("每个对象拥有一个原型对象，对象以其原型为模板，从原型继承方法和属性，"),n("code",[t._v("这些属性和方法定义在对象的构造函数的 prototype 属性上，而非对象实例本身")]),t._v("。")]),t._v(" "),n("blockquote",[n("p",[t._v("特点：JS对象是通过引用来传递的，当修改原型时，与之相关的对象也会继承这一改变")])]),t._v(" "),n("h2",{attrs:{id:"proto"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proto"}},[t._v("#")]),t._v(" "),n("strong",[t._v("proto")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[n("strong",[t._v("proto")])]),t._v(" ->  对象的一个属性: 是一个对象{}, 所以也叫隐式原型"),n("br")])]),t._v(" "),n("p",[t._v("每个 JS 对象都有 "),n("code",[t._v("__proto__")]),t._v(" 属性，可以通过__proto__找到自己的原型(prototype)，原型(prototype)也是一个对象。"),n("br"),t._v("\n这个对象上有许多函数和方法，"),n("code",[t._v("对象可以使用自身和原型上的属性和方法")]),t._v("。同时这个原型对象还有一个constructor属性，指向这个构造函数本身。")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("__proto__")]),t._v(" "),n("p",[t._v("注意: **"),n("strong",[t._v("proto")]),t._v("**这个属性是浏览器实现的，并不是JS自带的，是浏览器早期为了让我们访问到内部属性 [[prototype]] 来实现的一个东西。")])]),t._v(" "),n("hr"),t._v(" "),n("p",[n("code",[t._v("对象的属性值不是存放在对象内部的，存放仅仅是属性的引用")])]),t._v(" "),n("h2",{attrs:{id:"prototype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[t._v("#")]),t._v(" prototype")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("prototype")]),t._v(" ->  函数的一个属性: 是一个对象{}  所以也叫原型对象 或者叫显式原型"),n("br")])]),t._v(" "),n("p",[n("code",[t._v("prototype对象有一个constructor属性，默认指向prototype对象所在的构造函数")])]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("prototype是构造函数的属性，而constructor则是构造函数的prototype属性所指向的那个对象，也就是原型对象的属性")])]),t._v(" "),n("p",[n("strong",[t._v("对象的__proto__保存着该对象的构造函数的prototype")]),n("br")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在上面的例子")]),t._v("\nboy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("h2",{attrs:{id:"proto-和prototype-构造函数的关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proto-和prototype-构造函数的关系"}},[t._v("#")]),t._v(" __proto__和prototype 构造函数的关系")]),t._v(" "),n("ol",[n("li",[t._v("__proto__和constructor属性是对象所独有的；")]),t._v(" "),n("li",[t._v("prototype属性是函数所独有的，因为函数也是一种对象，所以函数也拥有__proto__和constructor属性")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(586),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"function和object的关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#function和object的关系"}},[t._v("#")]),t._v(" Function和Object的关系")]),t._v(" "),n("p",[t._v("这两个都是构造函数，Object继承自Function，Function继承自己，最终继承至Object")]),t._v(" "),n("blockquote",[n("p",[t._v("你隔着隔着呢？ 看图就明白了，或者看下面代码")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Function "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nObject "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[n("img",{attrs:{src:a(587),alt:""}}),t._v(" "),n("img",{attrs:{src:a(588),alt:""}})]),t._v(" "),n("h1",{attrs:{id:"原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("当一个对象调用某个方法或者属性的时候，先在自身查找，如果找到就调用，如果没有就顺着__proto__到原型对象中查找，如果还没有就继续去原型的原型中查找，一直到null，这样形成一条链叫做原型链。如果还没有找到就返回undefined")])]),t._v(" "),n("p",[t._v("每个对象拥有一个原型对象，通过 "),n("strong",[t._v("proto")]),t._v(" 指针指向上一个原型 ，并从中继承方法和属性，同时原型对象也可能拥有原型，这样一层一层，最终指向 null。这种关系被称为原型链 (prototype chain)，通过原型链一个对象会拥有定义在其他对象中的属性和方法")]),t._v(" "),n("h3",{attrs:{id:"经典图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#经典图"}},[t._v("#")]),t._v(" 经典图")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Object")]),t._v(" 是所有对象的顶级原型，所有对象都可以通过 "),n("code",[t._v("__proto__")]),t._v(" 找到它")]),t._v(" "),n("li",[n("code",[t._v("Function")]),t._v(" 是所有函数的顶级原型，所有函数都可以通过 "),n("code",[t._v("__proto__")]),t._v(" 找到它")]),t._v(" "),n("li",[t._v("函数的 "),n("code",[t._v("prototype")]),t._v(" 是一个对象")]),t._v(" "),n("li",[t._v("对象的 "),n("code",[t._v("__proto__")]),t._v(" 属性指向原型， "),n("code",[t._v("__proto__")]),t._v(" 将对象和原型连接起来组成了原型链")])])])}),[],!1,null,null,null);s.default=e.exports}}]);