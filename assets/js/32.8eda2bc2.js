(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{532:function(t,e,i){"use strict";i.r(e);var v=i(13),s=Object(v.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"git-与-svn-的区别在哪里"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-与-svn-的区别在哪里"}},[t._v("#")]),t._v(" git 与 svn 的区别在哪里")]),t._v(" "),i("p",[t._v("git 和 svn 最大的区别在于 git 是分布式的，而 svn 是集中式的。因此我们不能再离线的情况下使用 svn。如果服务器\n出现问题，我们就没有办法使用 svn 来提交我们的代码。")]),t._v(" "),i("p",[t._v("svn 中的分支是整个版本库的复制的一份完整目录，而 git 的分支是指针指向某次提交，因此 git 的分支创建更加开销更小\n并且分支上的变化不会影响到其他人。svn 的分支变化会影响到所有的人")]),t._v(" "),i("h2",{attrs:{id:"git-pull-和-git-fetch-的区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-和-git-fetch-的区别"}},[t._v("#")]),t._v(" git pull 和 git fetch 的区别")]),t._v(" "),i("p",[t._v("git fetch 只是将远程仓库的变化下载下来，并没有和本地分支合并。"),i("br"),t._v("\ngit pull 会将远程仓库的变化下载下来，并和当前分支合并。"),i("code",[t._v("git pull")]),t._v(" = "),i("code",[t._v("git fetch")]),t._v(" + "),i("code",[t._v("git merge")])]),t._v(" "),i("h2",{attrs:{id:"git-rebase-和-git-merge-的区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase-和-git-merge-的区别"}},[t._v("#")]),t._v(" git rebase 和 git merge 的区别")]),t._v(" "),i("p",[t._v("git merge 和 git rebase 都是用于分支合并，关键在 commit 记录的处理上不同。")]),t._v(" "),i("p",[t._v("git merge 会新建一个新的 commit 对象，然后两个分支以前的 commit 记录都指向这个新 commit 记录。这种方法会\n保留之前每个分支的 commit 历史。")]),t._v(" "),i("p",[t._v("git rebase 会先找到两个分支的第一个共同的 commit 祖先记录，然后将提取当前分支这之后的所有 commit 记录，然后\n将这个 commit 记录添加到目标分支的最新提交后面。经过这个合并后，两个分支合并后的 commit 记录就变为了线性的记\n录了。")]),t._v(" "),i("h2",{attrs:{id:"项目另一条分支出现bug了-你怎么办"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#项目另一条分支出现bug了-你怎么办"}},[t._v("#")]),t._v(" 项目另一条分支出现BUG了，你怎么办?")]),t._v(" "),i("p",[t._v("如果你当前分支工作还没做完，又不想提交，那么可以使用"),i("code",[t._v("git stash")]),t._v("，然后使用"),i("code",[t._v("git checkout 分支名")]),t._v("切换分支修复bug，再切回来使用"),i("code",[t._v("git stash pop")])]),t._v(" "),i("h2",{attrs:{id:"撤销已经提交的文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#撤销已经提交的文件"}},[t._v("#")]),t._v(" 撤销已经提交的文件?")]),t._v(" "),i("p",[i("code",[t._v("git checkout .")]),t._v(",git checkout除了创建切换分支的功能还有撤销的功能，为避免混淆，git2.x版本推出了"),i("code",[t._v("git switch")]),t._v(" 来代替 "),i("code",[t._v("git checkout")]),t._v(" 切换分支的功能")]),t._v(" "),i("h2",{attrs:{id:"提交代码冲突了这么解决-如何避免冲突"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#提交代码冲突了这么解决-如何避免冲突"}},[t._v("#")]),t._v(" 提交代码冲突了这么解决？如何避免冲突?")]),t._v(" "),i("p",[t._v("先备份自己的代码，再手动解决冲突的代码，再把自己的代码加回去。重新推送，避免冲突要养成好习惯，推送之前先"),i("code",[t._v("git pull")]),t._v("下拉取最新代码，冲突的原因往往是因为不同人员对同一地方进行了修改，git不知道怎么办。")])])}),[],!1,null,null,null);e.default=s.exports}}]);