(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{688:function(e,t,a){"use strict";a.r(t);var s=a(13),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"keepalive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keepalive"}},[e._v("#")]),e._v(" KeepAlive")]),e._v(" "),a("p",[e._v("如果一个组件需要频繁切换，或者保持切换前后的状态，就可以使用Vue内置的组件keep-alive包住该组件，使得被包含的组件保留状态，避免重复渲染。")]),e._v(" "),a("blockquote",[a("p",[e._v("一般结合路由和动态组件一起使用，用于缓存组件；提供 include 和 exclude 属性，两者都支持字符串或正则表达式， include 表示只有名称匹配的组件会被缓存，exclude 表示任何名称匹配的组件都不会被缓存 ，其中 exclude 的优先级比 include 高；对应两个钩子函数 activated 和 deactivated ，当组件被激活时，触发钩子函数 activated，当组件被移除时，触发钩子函数 deactivated")])]),e._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("\n\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);