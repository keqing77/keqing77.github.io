(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{602:function(t,e,a){"use strict";a.r(e);var v=a(13),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),a("p",[t._v("Set对象是值的集合，Set对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用。Set中的元素只会出现一次，即 Set 中的元素是唯一的。")]),t._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[t._v("Set.prototype.size")])]),t._v(" "),a("p",[t._v("返回Set的长度")]),t._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("Set.prototype.add()")]),t._v(" "),a("li",[t._v("Set.prototype.clear()")]),t._v(" "),a("li",[t._v("Set.prototype.delete()")]),t._v(" "),a("li",[t._v("Set.prototype.has()")]),t._v(" "),a("li",[t._v("Set.prototype.entries()")]),t._v(" "),a("li",[t._v("Set.prototype.forEach()")]),t._v(" "),a("li",[t._v("Set.prototype.values()")]),t._v(" "),a("li",[t._v("Set.prototype.keys() //和values一样，因为Set的key和value是相等的")])]),t._v(" "),a("h1",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),a("p",[t._v("又叫字典，Map 对象保存键值对，并且能够记住键的原始插入顺序。任何值(对象或者原始值) 都可以作为一个键或一个值")]),t._v(" "),a("h2",{attrs:{id:"属性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[t._v("Map.prototype.size")])]),t._v(" "),a("p",[t._v("返回Map的长度")]),t._v(" "),a("h2",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("Map.prototype.clear()")]),t._v(" "),a("li",[t._v("Map.prototype.delete(key)")]),t._v(" "),a("li",[t._v("Map.prototype.entries()")]),t._v(" "),a("li",[t._v("Map.prototype.forEach(callbackFn, thisArg)")]),t._v(" "),a("li",[t._v("Map.prototype.get(key)")]),t._v(" "),a("li",[t._v("Map.prototype.set()")]),t._v(" "),a("li",[t._v("Map.prototype.has()")]),t._v(" "),a("li",[t._v("Map.prototype.keys()")]),t._v(" "),a("li",[t._v("Map.prototype.values()")])])])}),[],!1,null,null,null);e.default=r.exports}}]);