(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{563:function(t,s,a){t.exports=a.p+"assets/img/array.cc16df03.png"},564:function(t,s,a){t.exports=a.p+"assets/img/array1.5c0dec7c.png"},565:function(t,s,a){t.exports=a.p+"assets/img/array3.4b0be2a1.png"},566:function(t,s,a){t.exports=a.p+"assets/img/array2.27766957.png"},649:function(t,s,a){"use strict";a.r(s);var n=a(14),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),n("p",[t._v("数组是非常常见的数据结构了,在几乎所有的编程语言都原生支持数组类型.")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("数组存储同一类型的值")]),t._v(" "),n("p",[t._v("数组存储一系列同一种数据类型的值,尽管在JavaScript中,可以在数组保存不同类型的值,但还是尽量遵守这个规则.")])]),t._v(" "),n("h2",{attrs:{id:"数组的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组的方法"}},[t._v("#")]),t._v(" 数组的方法")]),t._v(" "),n("p",[t._v("其实没什么好说的,自己去MDN一个一个过一遍数组的方法.")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[n("img",{attrs:{src:a(563),alt:""}})]),t._v(" "),n("div",{staticClass:"theorem"},[n("p",{staticClass:"title"},[t._v("数组是存放在连续内存空间上的相同类型数据的集合")]),n("p",[t._v("数组可以方便的通过下标索引的方式获取到下标下对应的数据")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("数组下标是从0开始的")])]),t._v(" "),n("li",[n("strong",[t._v("数组内存空间的地址是连续的")])])]),t._v(" "),n("p",[t._v("删除或者增添元素的时候，就要移动其他元素的地址.\n数组的元素是不能删的，只能覆盖\n例如删除下标为3的元素，需要对下标为3的元素后面的所有元素都要做移动操作，如图所示\n"),n("img",{attrs:{src:a(564),alt:""}})])]),n("h2",{attrs:{id:"二维数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二维数组"}},[t._v("#")]),t._v(" 二维数组")]),t._v(" "),n("p",[n("img",{attrs:{src:a(565),alt:""}}),t._v(" "),n("img",{attrs:{src:a(566),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"数组要懂的操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组要懂的操作"}},[t._v("#")]),t._v(" 数组要懂的操作")]),t._v(" "),n("ul",[n("li",[t._v("数组的增删改查")]),t._v(" "),n("li",[t._v("数组的遍历/排序/合并")]),t._v(" "),n("li",[t._v("数组的拆分/转换字符串")]),t._v(" "),n("li",[t._v("数组模拟栈/队列等数据结构")])]),t._v(" "),n("h2",{attrs:{id:"数组算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组算法"}},[t._v("#")]),t._v(" 数组算法")]),t._v(" "),n("ul",[n("li",[t._v("暴力算法(遍历)")]),t._v(" "),n("li",[t._v("二分法")]),t._v(" "),n("li",[t._v("双指针法(快慢指针)")]),t._v(" "),n("li",[t._v("滑动窗口\n..... 后续更新")])])])}),[],!1,null,null,null);s.default=p.exports}}]);