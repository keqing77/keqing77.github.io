(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{660:function(t,e,a){"use strict";a.r(e);var s=a(13),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是react"}},[t._v("#")]),t._v(" 什么是React")]),t._v(" "),a("p",[t._v("React是由Facebook(现改名Meta)开源的一个用于构建用户界面的JavaScript库。是目前全球使用人数最多，生态最丰富的js框架，目前最新版本是17.02，过渡版本，18大版本将全面转向Hooks。")]),t._v(" "),a("h2",{attrs:{id:"和vue的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和vue的对比"}},[t._v("#")]),t._v(" 和Vue的对比")]),t._v(" "),a("p",[t._v("两者差别不大，掌握一门学另外一门也是很快的，Vue更易上手，React稍难。(但难≠高级)，两者都是基于组件化、单向数据流、虚拟DOM。至于学习Vue和React，其实都是要学的，谁先谁后的问题。两者其实学习成本差不多，都比较好上手，虽然并称'三大框架'，但Vue和React只能说是一个'库'而已，Augular才可以说是真正的'框架'。只不过国内企业用得不多，估计是太难劝退了。")]),t._v(" "),a("h2",{attrs:{id:"学习react-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习react-hooks"}},[t._v("#")]),t._v(" 学习React（hooks）")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://beta.reactjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Hooks(新)官方文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://reactjs.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Hooks中文官方文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://reactjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React官方文档(旧)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("strong",[t._v("React Hooks的最新文档也正在编写中，目前只完成了70%，一旦完成则会替代目前的React官网(基于Class)。")])])]),t._v(" "),a("p",[t._v("自从React 16.8版本更新hooks后，推荐所有学习React的人都抛弃class的类组件学习Hooks，React将在18大版本发布全新的基于hooks的写法，届时将会全面抛弃class。同时也不要再看旧文档了，因为旧文档排版非常的令人窒息，你可能看到一半发现怎么变成hooks了🤣，而且旧文档的例子emm..,虽然不差，但和新文档的手把手教学没得比。")]),t._v(" "),a("h2",{attrs:{id:"hooks的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hooks的好处"}},[t._v("#")]),t._v(" hooks的好处")]),t._v(" "),a("p",[t._v("class类组件，当组件变大的时候，在组件之间复用状态逻辑很难，尽管mixin以及HOC高阶组件来解决这些问题，但是它们也会产生新的问题，这类方案需要重新组织你的组件结构，也就是重构。这可能会很麻烦，并使你的代码难以理解。而且class组件还有非常烦人的this问题!")]),t._v(" "),a("p",[t._v("而采取hooks后，函数式组件具有进入状态的能力，因此重构工作会非常少，自然也不需要Mixin、Hoc高阶组件等繁杂的写法了,而且也不需要再担心this了，并且能将相关逻辑都放在同一位置。")])])}),[],!1,null,null,null);e.default=r.exports}}]);